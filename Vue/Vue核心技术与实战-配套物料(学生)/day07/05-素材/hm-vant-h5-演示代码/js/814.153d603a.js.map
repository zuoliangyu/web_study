{"version":3,"file":"js/814.153d603a.js","mappings":"gKAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,cAAc,CAACG,MAAM,CAAC,MAAQ,UAAUH,EAAG,WAAW,CAACI,GAAG,CAAC,OAASR,EAAIS,WAAW,CAACL,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,WAAW,MAAQ,MAAM,YAAc,MAAM,MAAQ,CACvS,CAAEG,UAAU,EAAMC,QAAS,UAC3B,CAAEC,QAAS,WAAYD,QAAS,gBAAkBE,MAAM,CAACC,MAAOd,EAAY,SAAEe,SAAS,SAAUC,GAAMhB,EAAIiB,SAASD,GAAKE,WAAW,cAAcd,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,WAAW,KAAO,WAAW,MAAQ,KAAK,YAAc,KAAK,MAAQ,CACrP,CAAEG,UAAU,EAAMC,QAAS,SAC3B,CAAEC,QAAS,WAAYD,QAAS,gBAAkBE,MAAM,CAACC,MAAOd,EAAY,SAAEe,SAAS,SAAUC,GAAMhB,EAAImB,SAASH,GAAKE,WAAW,cAAcd,EAAG,MAAM,CAACgB,YAAY,CAAC,OAAS,SAAS,CAAChB,EAAG,aAAa,CAACG,MAAM,CAAC,MAAQ,GAAG,KAAO,UAAU,cAAc,WAAW,CAACP,EAAIqB,GAAG,SAAS,IAAI,GAAGjB,EAAG,cAAc,CAACE,YAAY,OAAOC,MAAM,CAAC,GAAK,WAAW,CAACP,EAAIqB,GAAG,cAAc,IACvXC,EAAkB,G,UCiCtB,GACAC,KAAAA,gBACAC,OACA,OACAP,SAAAA,GACAE,SAAAA,KAGAM,QAAAA,CACA,wBAGA,WACA,6BACA,+BCpDoQ,I,UCQhQC,GAAY,OACd,EACA3B,EACAuB,GACA,EACA,KACA,WACA,MAIF,EAAeI,EAAiB,S,oHCXzB,MAAMC,EAAWC,GAAOC,EAAAA,EAAAA,KAAa,iBAAkBD,GAGjDE,EAAQF,GAAOC,EAAAA,EAAAA,KAAa,cAAeD,GAG3CG,EAAc,KAClBF,EAAAA,EAAAA,GAAQ","sources":["webpack://hm-vant-h5/./src/views/register.vue?3935","webpack://hm-vant-h5/src/views/register.vue","webpack://hm-vant-h5/./src/views/register.vue?630e","webpack://hm-vant-h5/./src/views/register.vue","webpack://hm-vant-h5/./src/api/user.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"login-page\"},[_c('van-nav-bar',{attrs:{\"title\":\"面经注册\"}}),_c('van-form',{on:{\"submit\":_vm.onSubmit}},[_c('van-field',{attrs:{\"name\":\"username\",\"label\":\"用户名\",\"placeholder\":\"用户名\",\"rules\":[\n        { required: true, message: '请填写用户名' },\n        { pattern: /^\\w{5,}$/, message: '长度必须5个字符以上' } ]},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_c('van-field',{attrs:{\"type\":\"password\",\"name\":\"password\",\"label\":\"密码\",\"placeholder\":\"密码\",\"rules\":[\n        { required: true, message: '请填写密码' },\n        { pattern: /^\\w{6,}$/, message: '长度必须6个字符以上' } ]},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('div',{staticStyle:{\"margin\":\"16px\"}},[_c('van-button',{attrs:{\"block\":\"\",\"type\":\"primary\",\"native-type\":\"submit\"}},[_vm._v(\"注册\")])],1)],1),_c('router-link',{staticClass:\"link\",attrs:{\"to\":\"/login\"}},[_vm._v(\"有账号，去登录\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"login-page\">\r\n    <van-nav-bar title=\"面经注册\" />\r\n\r\n    <van-form @submit=\"onSubmit\">\r\n      <van-field\r\n        v-model=\"username\"\r\n        name=\"username\"\r\n        label=\"用户名\"\r\n        placeholder=\"用户名\"\r\n        :rules=\"[\r\n          { required: true, message: '请填写用户名' },\r\n          { pattern: /^\\w{5,}$/, message: '长度必须5个字符以上' },\r\n        ]\"\r\n      />\r\n      <van-field\r\n        v-model=\"password\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        label=\"密码\"\r\n        placeholder=\"密码\"\r\n        :rules=\"[\r\n          { required: true, message: '请填写密码' },\r\n          { pattern: /^\\w{6,}$/, message: '长度必须6个字符以上' },\r\n        ]\"\r\n      />\r\n      <div style=\"margin: 16px\">\r\n        <van-button block type=\"primary\" native-type=\"submit\">注册</van-button>\r\n      </div>\r\n    </van-form>\r\n    <router-link class=\"link\" to=\"/login\">有账号，去登录</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { Toast } from 'vant'\r\nimport { register } from '@/api/user'\r\n\r\nexport default {\r\n  name: 'register-page',\r\n  data () {\r\n    return {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async onSubmit (values) {\r\n      // 发送注册的请求\r\n      // try catch 尝试执行 try 代码块的逻辑，如果有错误，会被 catch 捕获，存入 e 中\r\n      await register(values)\r\n      this.$toast.success('注册成功！')\r\n      this.$router.push('/login')\r\n    }\r\n  }\r\n}\r\n\r\n// console.log('submit', values)\r\n// Toast('普通提示')\r\n\r\n// Toast.loading({\r\n//   message: '拼命加载中...',\r\n//   forbidClick: true,\r\n//   duration: 0 // 永远不自动消失\r\n// })\r\n\r\n// setTimeout(() => {\r\n//   console.log('3秒后, 请求回来了')\r\n//   // Toast.clear()\r\n//   Toast.success('恭喜注册成功')\r\n// }, 3000)\r\n\r\n// 必须在组件实例范围内，this指向某个组件实例，才能这么用\r\n// this.$toast.fail('失败了')\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.link {\r\n  color: #069;\r\n  font-size: 12px;\r\n  padding-right: 20px;\r\n  float: right;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./register.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./register.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./register.vue?vue&type=template&id=3231cd64&scoped=true&\"\nimport script from \"./register.vue?vue&type=script&lang=js&\"\nexport * from \"./register.vue?vue&type=script&lang=js&\"\nimport style0 from \"./register.vue?vue&type=style&index=0&id=3231cd64&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3231cd64\",\n  null\n  \n)\n\nexport default component.exports","// 在这里封装请求的函数\r\nimport request from '@/utils/request'\r\n\r\n// const register = (obj) => {\r\n//   return request.post('/user/register', obj)\r\n// }\r\n\r\n// 注册请求函数\r\nexport const register = obj => request.post('/user/register', obj)\r\n\r\n// 登录请求函数\r\nexport const login = obj => request.post('/user/login', obj)\r\n\r\n// 获取用户信息\r\nexport const getUserInfo = () => {\r\n  return request('/user/currentUser')\r\n}\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","onSubmit","required","message","pattern","model","value","callback","$$v","username","expression","password","staticStyle","_v","staticRenderFns","name","data","methods","component","register","obj","request","login","getUserInfo"],"sourceRoot":""}